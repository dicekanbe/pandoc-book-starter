name: Build Books

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # リリースの作成とファイルアップロードに必要

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '3.7.0.2'
    
    - name: Install TeX Live
      run: |
        sudo apt-get update
        sudo apt-get install -y make texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra texlive-xetex texlive-lang-cjk texlive-lang-chinese texlive-lang-japanese texlive-luatex texlive-latex-recommended
    
    - name: Install Node.js for textlint
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install textlint dependencies
      run: |
        npm install -g textlint
    
    - name: Run textlint
      run: |
        echo "textlint"
    
    - name: Install dependencies for Puppeteer
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libgtk-3-0 \
          libasound2t64
    
    - name: Install mermaid-cli
      run: |
        npm install -g @mermaid-js/mermaid-cli
        # Set up environment for puppeteer
        echo "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false" >> $GITHUB_ENV
        echo "PUPPETEER_ARGS=--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu" >> $GITHUB_ENV

    - name: Build books
      run: |
        # Ensure puppeteer environment variables are exported
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
        export PUPPETEER_ARGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu"
        make epub-all pdf-all
    
    - name: Install EPUBCheck
      run: |
        # Download EPUBCheck
        wget https://github.com/w3c/epubcheck/releases/download/v5.1.0/epubcheck-5.1.0.zip
        unzip epubcheck-5.1.0.zip
        sudo mv epubcheck-5.1.0 /opt/epubcheck
        # Create symlink for easy access
        sudo ln -s /opt/epubcheck/epubcheck.jar /usr/local/bin/epubcheck.jar
    
    - name: Validate EPUB files
      run: |
        echo "Validating EPUB files..."
        # Check if EPUB files exist and validate them
        if [ -f "build/vol1/ja/book.epub" ]; then
          echo "Validating Japanese EPUB..."
          java -jar /usr/local/bin/epubcheck.jar build/vol1/ja/book.epub
        else
          echo "Japanese EPUB not found"
          exit 1
        fi
        
        if [ -f "build/vol1/en/book.epub" ]; then
          echo "Validating English EPUB..."
          java -jar /usr/local/bin/epubcheck.jar build/vol1/en/book.epub
        else
          echo "English EPUB not found"
          exit 1
        fi
        
        echo "All EPUB files are valid!"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-books
        path: build/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: built-books
        path: build/
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 📚 電子書籍リリース ${{ github.ref_name }}
          
          このリリースには以下のファイルが含まれています：
          
          ### 📖 日本語版
          - `book-ja.epub` - EPUB形式
          - `book-ja.pdf` - PDF形式
          
          ### 📖 English Version
          - `book-en.epub` - EPUB format
          - `book-en.pdf` - PDF format
          
          ### 🔍 変更内容
          詳細な変更内容については、コミット履歴をご確認ください。
          
          ### 📋 システム要件
          - EPUB: Kindle、Calibre、Adobe Digital Editions等のEPUBリーダー
          - PDF: PDF対応のビューアー
        draft: false
        prerelease: false
    
    - name: Upload Japanese EPUB
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/vol1/ja/book.epub
        asset_name: book-ja.epub
        asset_content_type: application/epub+zip
    
    - name: Upload Japanese PDF
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/vol1/ja/book.pdf
        asset_name: book-ja.pdf
        asset_content_type: application/pdf
    
    - name: Upload English EPUB
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/vol1/en/book.epub
        asset_name: book-en.epub
        asset_content_type: application/epub+zip
    
    - name: Upload English PDF
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/vol1/en/book.pdf
        asset_name: book-en.pdf
        asset_content_type: application/pdf
