name: Build Books

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '3.7.0.2'
    
    - name: Install TeX Live
      run: |
        sudo apt-get update
        sudo apt-get install -y make texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra texlive-xetex texlive-lang-cjk texlive-lang-chinese texlive-lang-japanese
    
    - name: Install Node.js for textlint
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install textlint dependencies
      run: |
        npm install -g textlint
    
    - name: Run textlint
      run: |
        echo "textlint"
    
    - name: Install dependencies for Puppeteer
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libgtk-3-0 \
          libasound2t64
    
    - name: Install mermaid-cli
      run: |
        npm install -g @mermaid-js/mermaid-cli
        # Set up environment for puppeteer
        echo "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false" >> $GITHUB_ENV
        echo "PUPPETEER_ARGS=--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu" >> $GITHUB_ENV

    - name: Build books
      run: |
        # Ensure puppeteer environment variables are exported
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
        export PUPPETEER_ARGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu"
        make build-all
    
    - name: Install EPUBCheck
      run: |
        # Download EPUBCheck
        wget https://github.com/w3c/epubcheck/releases/download/v5.1.0/epubcheck-5.1.0.zip
        unzip epubcheck-5.1.0.zip
        sudo mv epubcheck-5.1.0 /opt/epubcheck
        # Create symlink for easy access
        sudo ln -s /opt/epubcheck/epubcheck.jar /usr/local/bin/epubcheck.jar
    
    - name: Validate EPUB files
      run: |
        echo "Validating EPUB files..."
        # Check if EPUB files exist and validate them
        if [ -f "build/vol1/ja/book.epub" ]; then
          echo "Validating Japanese EPUB..."
          java -jar /usr/local/bin/epubcheck.jar build/vol1/ja/book.epub
        else
          echo "Japanese EPUB not found"
          exit 1
        fi
        
        if [ -f "build/vol1/en/book.epub" ]; then
          echo "Validating English EPUB..."
          java -jar /usr/local/bin/epubcheck.jar build/vol1/en/book.epub
        else
          echo "English EPUB not found"
          exit 1
        fi
        
        echo "All EPUB files are valid!"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-books
        path: build/
