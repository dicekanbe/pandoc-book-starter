name: Build Books

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '3.7.0.2'
    
    - name: Install TeX Live
      run: |
        sudo apt-get update
        sudo apt-get install -y make texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra texlive-xetex texlive-lang-cjk texlive-lang-chinese texlive-lang-japanese
    
    - name: Install Node.js for textlint
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install textlint dependencies
      run: |
        npm install -g textlint
    
    - name: Run textlint
      run: |
        echo "textlint"
    
    - name: Install Chromium
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
    
    - name: Install mermaid-cli
      run: |
        npm install -g @mermaid-js/mermaid-cli
        # Find the actual mmdc path
        MMDC_PATH=$(which mmdc)
        echo "Found mmdc at: $MMDC_PATH"
        # Create wrapper script to force no-sandbox mode
        sudo tee /usr/local/bin/mmdc-wrapper > /dev/null << EOF
        #!/bin/bash
        export PUPPETEER_ARGS='--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu'
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
        $MMDC_PATH "\$@"
        EOF
        sudo chmod +x /usr/local/bin/mmdc-wrapper
        # Replace mmdc with wrapper
        sudo mv "$MMDC_PATH" "${MMDC_PATH}.orig"
        sudo ln -s /usr/local/bin/mmdc-wrapper "$MMDC_PATH"

    - name: Build books
      run: |
        make build-all
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-books
        path: build/
